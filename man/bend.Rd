% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bend.R
\name{bend}
\alias{bend}
\title{Deform}
\usage{
bend(
  data,
  elastic_modulus,
  shear_modulus,
  step = 0.02,
  points = 100,
  iterations = 15,
  verbose = TRUE
)
}
\arguments{
\item{data}{Point data.frame (see details).}

\item{elastic_modulus}{Elasticity modulus (bending, MPa)}

\item{shear_modulus}{Shear modulus (torsion, MPa)}

\item{step}{Length of the segments that discretize the object (m).}

\item{points}{Number of points used in the grid discretizing the section.}

\item{iterations}{Number of iterations to compute the torsion and bending}

\item{verbose}{Boolean. Return information during procress?}
}
\value{
A \code{\link[=data.frame]{data.frame()}}:
\itemize{
\item x (m): X coordinate
\item y (m): Y coordinate
\item z (m): Z coordinate
\item length (m): length of the section
\item angle_xy (degree): angle of the segment with the XY plane
\item angle_xz (degree): angle of the segment with the XZ plane
\item torsion (degree): rotation angle of the segment
}
}
\description{
Compute the deformation by applying both bending and torsion
}
\details{
The data argument is a \code{\link[=data.frame]{data.frame()}} with each row being a point and each column being:
\itemize{
\item x: x coordinate of the segment
\item y: y coordinate of the segment
\item z: z coordinate of the segment
\item type: section type of the segment. 1: triangle (bottom-oriented); 2 : rectangle; 3 : triangle (top-oriented);
4 : ellipsis; 5 : circle.
\item width (m): segment section width
\item height (m): segment section height
\item mass (kg): mass of the segment
\item mass_right (kg): mass carried by the segment, on the right side
\item mass_left (kg): mass carried by the segment, on the left side
\item torsion (degree): initial torsion angle of the segment
\item distance_application (m): application distances for the left and right weights (see e.g. \code{\link[=distance_weight_sine]{distance_weight_sine()}})
}
}
\examples{
filepath = system.file("extdata/6_EW01.22_17_kanan.txt", package = "biomech")
df = read_mat(filepath)
# Un-bending the field measurements:
df = unbend(df)

# Adding the distance of application of the left and right weight:
df$distance_application = distance_weight_sine(df$x)

# (Re-)computing the deformation:
df_bend = bend(df, elastic_modulus = 2000, shear_modulus = 400, step = 0.02, points = 100,
               iterations = 15, verbose = TRUE)
}
